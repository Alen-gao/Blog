 <div class="content clearfloat">
    <div class="cont-left">
      <h2 class="h2">
        <p class="userphoto"><img src="../images/photo.jpg" /></p>
        <p class="text-title">
           <strong>七天学会NodeJS</strong>
           <span>Mark Elliot Zuckerberg  | <a href="#"> node.js </a> | 2014-08-06 17:35 </span>
        </p>
      </h2>
      <article class="content">
        <h3>NodeJS基础</h3>
        <p>JS是脚本语言，脚本语言都需要一个解析器才能运行。对于写在HTML页面里的JS，浏览器充当了解析器的角色。而对于需要独立运行的JS，NodeJS就是一个解析器。每一种解析器都是一个运行环境，不但允许JS定义各种数据结构，进
行各种计算，还允许JS使用运行环境提供的内置对象和方法做一些事情。例如运行在浏览器中的JS的用途是操作DOM，浏览器就提供了document之类的内置对象。而运行在NodeJS中的JS的用途是操作磁盘文件或搭建HTTP服务器，NodeJS
就相应提供了fs、http等内置对象。</p>
         <h4>有啥用处</h4>
         <p>尽管存在一听说可以直接运行JS文件就觉得很酷的同学，但大多数同学在接触新东西时首先关心的是有啥用处，以及能带来啥价值。NodeJS的作者说，他创造NodeJS的目的是为了实现高性能Web服务器，他首先看重的是事件机制和异步
IO模型的优越性，而不是JS。但是他需要选择一种编程语言实现他的想法，这种编程语言不能自带IO功能，并且需要能良好支持事件机制。JS没有自带IO功能，天生就用于处理浏览器中的 DOM事件，并且拥有一大群程序员，因此就成为
了天然的选择。
如他所愿，NodeJS在服务端活跃起来，出现了大批基于NodeJS的Web服务。而另一方面，NodeJS让前端众如获神器，终于可以让自己的能力覆盖范围跳出浏览器窗口，更大批的前端工具如雨后春笋。因此，对于前端而言，虽然不是人人<br />
都要拿NodeJS写一个服务器程序，但简单可至使用命令交互模式调试JS代码片段，复杂可至编写工具提升工作效率。NodeJS生态圈正欣欣向荣。<br />
</p>
        <h4>如何安装</h4>
        <p>NodeJS提供了一些安装程序，都可以在nodejs.org这里下载并安装。<br />
Windows系统下，选择和系统版本匹配的.msi后缀的安装文件。Mac OS X系统下，选择.pkg后缀的安装文件。<br />
编译安装<br />
Linux系统下没有现成的安装程序可用，虽然一些发行版可以使用apt-get之类的方式安装，但不一定能安装到最新版。因此Linux系统下一般使用以下方式编译方式安装NodeJS。<br />
    确保系统下g++版本在4.6以上，python版本在2.6以上。<br />
    从nodejs.org下载tar.gz后缀的NodeJS最新版源代码包并解压到某个位置。<br />
    进入解压到的目录，使用以下命令编译和安装。<br />
    查看源码<br />
    打印?<br />
      $ ./configure<br />
      $ make<br />
      $ sudo make install<br />
    </p>
      </article>

      <p class="next-Links">
        <a href="#">  >> 上一篇 : 每个程序员必知之:程序员差别的本质   </a>
        <a href="#">  >> 下一篇 : 180天制作180个网站的艺术专业女生：我学习编程的第一年   </a>

      </p>

      <section class="message clearfloat">
        
        <div class="mess-dl">
          <div class="mess-ico"><img src="../images/photo.jpg" /></div>
          <div class="mess-cont">
            <p class="mess-title"><span>Mark Elliot Zuckerberg  </span><em> ● 2014-8-6 11:31</em></p>
            <p class="mess-text">标准有规定，如果服务器返回304，客户端浏览器在有缓存情况下可以视为200处理手动setHeader If-None-Match或者If-Modified-Since就可以获取到真实状态码这是刚才别人回答的。。。 可是 setHeader If-None-Match或者If-Modified-Since  头的值设成什么呢。。。。</p>
            <a  href="#" class="mess-a">回复</a>
          </div>
        </div>

        <div class="mess-dl">
          <div class="mess-ico"><img src="../images/photo.jpg" /></div>
          <div class="mess-cont">
            <p class="mess-title"><span>Mark Elliot Zuckerberg  </span><em> ● 2014-8-6 11:31</em></p>
            <p class="mess-text">标准有规定，如果服务器返回304，客户端浏览器在有缓存情况下可以视为200处理手动setHeader If-None-Match或者If-Modified-Since就可以获取到真实状态码这是刚才别人回答的。。。 可是 setHeader If-None-Match或者If-Modified-Since  头的值设成什么呢。。。。</p>
            <a  href="#" class="mess-a">回复</a>
          </div>
        </div>

        <div class="mess-dl">
          <div class="mess-ico"><img src="../images/photo.jpg" /></div>
          <div class="mess-cont">
            <p class="mess-title"><span>Mark Elliot Zuckerberg  </span><em> ● 2014-8-6 11:31</em></p>
            <p class="mess-text">标准有规定，如果服务器返回304，客户端浏览器在有缓存情况下可以视为200处理手动setHeader If-None-Match或者If-Modified-Since就可以获取到真实状态码这是刚才别人回答的。。。 可是 setHeader If-None-Match或者If-Modified-Since  头的值设成什么呢。。。。</p>
            <a  href="#" class="mess-a">回复</a>
          </div>

          <div class="user-reply">
            <div class="user-ico"><img src="../images/photo.jpg" /></div>
            <div class="mess-cont">
              <p class="mess-title"><span>Mark Elliot Zuckerberg  </span><em> ● 2014-8-6 11:31</em></p>
              <p class="mess-text"><i class="pink">@Mark Elliot Zuckerberg </i>标准有规定，如果服务器返回304，客户端浏览器在有缓存情况下可以视为200处理手动setHeader If-None-Match或者If-Modified-Since就可以获取到真实状态码这是刚才别人回答的。。。 可是 setHeader If-None-Match或者If-Modified-Since  头的值设成什么呢。。。。</p>
              <a  href="#" class="mess-a">回复</a>
            </div>
          </div>

          <div class="user-reply">
            <div class="user-ico"><img src="../images/photo.jpg" /></div>
            <div class="mess-cont">
              <p class="mess-title"><span>Mark Elliot Zuckerberg  </span><em> ● 2014-8-6 11:31</em></p>
              <p class="mess-text"><i class="pink">@Mark Elliot Zuckerberg </i>标准有规定，如果服务器返回304，客户端浏览器在有缓存情况下可以视为200处理手动setHeader If-None-Match或者If-Modified-Since就可以获取到真实状态码这是刚才别人回答的。。。 可是 setHeader If-None-Match或者If-Modified-Since  头的值设成什么呢。。。。</p>
              <a  href="#" class="mess-a">回复</a>
            </div>
          </div>

        </div>


        <div class="mess-dl">
          <div class="mess-ico"><img src="../images/photo.jpg" /></div>
          <div class="mess-cont">
            <p class="mess-title"><span>Mark Elliot Zuckerberg  </span><em> ● 2014-8-6 11:31</em></p>
            <p class="mess-text">标准有规定，如果服务器返回304，客户端浏览器在有缓存情况下可以视为200处理手动setHeader If-None-Match或者If-Modified-Since就可以获取到真实状态码这是刚才别人回答的。。。 可是 setHeader If-None-Match或者If-Modified-Since  头的值设成什么呢。。。。</p>
            <a  href="#" class="mess-a">回复</a>
          </div>
        </div>

        <div class="mess-dl">
          <div class="mess-ico"><img src="../images/photo.jpg" /></div>
          <div class="mess-cont">
            <p class="mess-title"><span>Mark Elliot Zuckerberg  </span><em> ● 2014-8-6 11:31</em></p>
            <p class="mess-text">标准有规定，如果服务器返回304，客户端浏览器在有缓存情况下可以视为200处理手动setHeader If-None-Match或者If-Modified-Since就可以获取到真实状态码这是刚才别人回答的。。。 可是 setHeader If-None-Match或者If-Modified-Since  头的值设成什么呢。。。。</p>
            <a  href="#" class="mess-a">回复</a>
            <!-- <p><textarea ></textarea><a href="#">回 复</a></p> -->
          </div>
        </div>



        <div class="Pagination">
          <p><span  class="hover">1</span><span>2</span><span>3</span><span>4</span><span>5</span><span>6</span></p>
        </div>


        <div class="text-reply">
          <span><img src="../images/photo.jpg" /></span>
          <p>
            <textarea ></textarea>
            <input type="submit" value="回复" />
          </p>
        </div>
      </section>

    </div>
   
  </div>